name: Flutter CI

# 触发条件
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# 环境变量
env:
  FLUTTER_VERSION: "3.19.0"  # 指定Flutter版本，可以根据需要修改

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest    # 使用Ubuntu运行环境

    steps:
    # 1. 检出代码
    - name: Checkout repository
      uses: actions/checkout@v4

    # 2. 设置Java环境（Flutter Android构建需要）
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # 3. 设置Flutter环境
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true

    # 4. 安装依赖
    - name: Install dependencies
      run: flutter pub get

    # 5. 检查代码格式
    - name: Check formatting
      run: dart format --set-exit-if-changed .

    # 6. 运行静态分析
    - name: Analyze code
      run: flutter analyze

    # 7. 运行测试
    - name: Run tests
      run: flutter test

    # 8. 构建APK（Android）
    - name: Build APK
      run: flutter build apk --release

    # 9. 构建iOS（可选，需要macOS runner）
    # - name: Build iOS
    #   if: runner.os == 'macOS'
    #   run: |
    #     flutter build ios --release --no-codesign

    # 10. 上传构建产物
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: app-release
        path: build/app/outputs/flutter-apk/app-release.apk