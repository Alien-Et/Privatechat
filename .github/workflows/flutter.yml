name: 构建并发布 Flutter 应用

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_and_release:
    runs-on: macos-latest

    steps:
      # 1. 检出代码
      - uses: actions/checkout@v4

      # 2. 设置 Java 环境
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      # 3. 设置 Flutter 环境
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'
          channel: 'stable'

      # 4. 生成并配置 Android 目录
      - name: 生成并配置 Android 目录
        run: |
          flutter create . --platforms android
          # 覆盖默认的 build.gradle 以确保兼容性
          cat << 'EOF' > android/app/build.gradle
          def flutterRoot = localProperties.getProperty('flutter.sdk')
          if (flutterRoot == null) {
              throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
          }

          apply plugin: 'com.android.application'
          apply plugin: 'kotlin-android'
          apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

          android {
              compileSdkVersion 34
              sourceSets {
                  main.java.srcDirs += 'src/main/kotlin'
              }
              defaultConfig {
                  applicationId "com.example.private_chat"
                  minSdkVersion 21
                  targetSdkVersion 34
                  versionCode 1
                  versionName "1.0"
              }
              buildTypes {
                  release {
                      signingConfig signingConfigs.debug
                      minifyEnabled false
                      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                  }
              }
          }

          flutter {
              source '../..'
          }

          dependencies {
              implementation "org.jetbrains.kotlin:kotlin-stdlib:1.9.24"
          }
          EOF

      # 5. 生成 local.properties
      - name: 生成 local.properties
        run: |
          echo "sdk.dir=$(dirname $(dirname $(which flutter)))/android-sdk" > android/local.properties
          echo "flutter.sdk=$(dirname $(dirname $(which flutter)))" >> android/local.properties

      # 6. 获取依赖
      - name: 获取依赖
        run: flutter pub get

      # 7. 调试文件结构
      - name: 检查文件结构和配置
        run: |
          ls -la
          ls -la android/
          cat android/app/build.gradle
          cat android/local.properties
          cat pubspec.yaml

      # 8. 构建 Android APK
      - name: 构建 Android APK
        run: flutter build apk --release --verbose

      # 9. 发布到 GitHub Release
      - name: 发布 APK 到 Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/flutter-apk/app-release.apk"
          tag: v${{ github.run_number }}
          name: 版本 ${{ github.run_number }}
          body: "自动构建的 APK - 构建于 ${{ github.event.head_commit.timestamp }}"
          token: ${{ secrets.GITHUB_TOKEN }}