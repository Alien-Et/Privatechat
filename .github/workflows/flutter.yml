name: 构建 Flutter 应用

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest

    steps:
      # 1. 检出代码
      - uses: actions/checkout@v4

      # 2. 设置 Java 环境（用于 Android 构建）
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      # 3. 设置 Flutter 环境
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'
          channel: 'stable'

      # 4. 创建 Flutter 项目目录并生成 Android 和 iOS 目录
      - name: 创建项目目录并生成 Android 和 iOS 目录
        run: |
          mkdir -p private_chat
          cd private_chat
          flutter create . --project-name private_chat

      # 5. 生成 local.properties 文件
      - name: 生成 local.properties
        run: |
          echo "sdk.dir=$(dirname $(dirname $(which flutter)))/android-sdk" > android/local.properties
          echo "flutter.sdk=$(dirname $(dirname $(which flutter)))" >> android/local.properties
        working-directory: private_chat

      # 6. 获取 Flutter 依赖
      - name: 获取依赖
        run: flutter pub get
        working-directory: private_chat

      # 7. 构建 APK（Android）
      - name: 构建 APK
        run: flutter build apk --release --verbose
        working-directory: private_chat

      # 8. 构建 IPA（iOS）
      - name: 构建 IPA
        run: flutter build ipa --release --no-codesign
        working-directory: private_chat

      # 9. 上传 APK 到 Artifacts
      - name: 上传 APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: private_chat/build/app/outputs/flutter-apk/app-release.apk

      # 10. 上传 IPA 到 Artifacts
      - name: 上传 IPA
        uses: actions/upload-artifact@v4
        with:
          name: app-release-ipa
          path: private_chat/build/ios/ipa/*.ipa